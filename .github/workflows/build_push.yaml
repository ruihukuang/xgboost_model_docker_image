name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main  # Change this to your default branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Run AWS CLI Command
      run: |
        aws s3 ls
  
  
    - name: Update IAM Policy
      run: |
        POLICY_NAME="MyCustomPolicy_Cloudformation_IAM"
        POLICY_ARN=$(aws iam list-policies --query "Policies[?PolicyName=='$POLICY_NAME'].Arn" --output text)
        
        if [ -z "$POLICY_ARN" ]; then
          echo "Policy not found. Creating new policy."
          POLICY_ARN=$(aws iam create-policy --policy-name $POLICY_NAME --policy-document file://Policy/Cloudformation_IAM.json --query 'Policy.Arn' --output text)
          aws iam attach-user-policy --user-name Janice --policy-arn $POLICY_ARN
        else
          echo "Policy already exists. No action needed."
        fi

        aws iam attach-user-policy --user-name Janice --policy-arn $POLICY_ARN     
    
    - name: Deploy CloudFormation Stack to enable ECR operations
      run: |
        aws cloudformation deploy \
          --template-file CloudFormation/Policy_ECR_IAM.yaml \
          --stack-name Enable_ECR_Operation \
          --region ${{ secrets.AWS_REGION }} \
          --capabilities CAPABILITY_NAMED_IAM
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Create a ECR Repository for model artifacts
      run: |
        aws ecr create-repository --repository-name ${{ secrets.repository_name }} --region ${{ secrets.AWS_REGION }}

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        ECR_REPOSITORY: ${{ secrets.repository_name }} 
        IMAGE_TAG: ${{ github.sha }}_xgboost
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Display Commit SHA
      run: |
        echo "The commit SHA is ${{ github.sha }}_xgboost"
